export declare const custodyAbi: readonly [{
    readonly type: "constructor";
    readonly inputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "CHALLENGE_STATE_TYPEHASH";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "MIN_CHALLENGE_PERIOD";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "challenge";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }, {
        readonly name: "candidate";
        readonly type: "tuple";
        readonly internalType: "struct State";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }, {
        readonly name: "proofs";
        readonly type: "tuple[]";
        readonly internalType: "struct State[]";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }, {
        readonly name: "challengerSig";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "checkpoint";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }, {
        readonly name: "candidate";
        readonly type: "tuple";
        readonly internalType: "struct State";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }, {
        readonly name: "proofs";
        readonly type: "tuple[]";
        readonly internalType: "struct State[]";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "close";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }, {
        readonly name: "candidate";
        readonly type: "tuple";
        readonly internalType: "struct State";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }, {
        readonly name: "";
        readonly type: "tuple[]";
        readonly internalType: "struct State[]";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "create";
    readonly inputs: readonly [{
        readonly name: "ch";
        readonly type: "tuple";
        readonly internalType: "struct Channel";
        readonly components: readonly [{
            readonly name: "participants";
            readonly type: "address[]";
            readonly internalType: "address[]";
        }, {
            readonly name: "adjudicator";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "challenge";
            readonly type: "uint64";
            readonly internalType: "uint64";
        }, {
            readonly name: "nonce";
            readonly type: "uint64";
            readonly internalType: "uint64";
        }];
    }, {
        readonly name: "initial";
        readonly type: "tuple";
        readonly internalType: "struct State";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }];
    readonly outputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "deposit";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "token";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "amount";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "payable";
}, {
    readonly type: "function";
    readonly name: "depositAndCreate";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "amount";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "ch";
        readonly type: "tuple";
        readonly internalType: "struct Channel";
        readonly components: readonly [{
            readonly name: "participants";
            readonly type: "address[]";
            readonly internalType: "address[]";
        }, {
            readonly name: "adjudicator";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "challenge";
            readonly type: "uint64";
            readonly internalType: "uint64";
        }, {
            readonly name: "nonce";
            readonly type: "uint64";
            readonly internalType: "uint64";
        }];
    }, {
        readonly name: "initial";
        readonly type: "tuple";
        readonly internalType: "struct State";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
    readonly stateMutability: "payable";
}, {
    readonly type: "function";
    readonly name: "eip712Domain";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "fields";
        readonly type: "bytes1";
        readonly internalType: "bytes1";
    }, {
        readonly name: "name";
        readonly type: "string";
        readonly internalType: "string";
    }, {
        readonly name: "version";
        readonly type: "string";
        readonly internalType: "string";
    }, {
        readonly name: "chainId";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "verifyingContract";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "salt";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }, {
        readonly name: "extensions";
        readonly type: "uint256[]";
        readonly internalType: "uint256[]";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getAccountsBalances";
    readonly inputs: readonly [{
        readonly name: "accounts";
        readonly type: "address[]";
        readonly internalType: "address[]";
    }, {
        readonly name: "tokens";
        readonly type: "address[]";
        readonly internalType: "address[]";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256[][]";
        readonly internalType: "uint256[][]";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getChannelBalances";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }, {
        readonly name: "tokens";
        readonly type: "address[]";
        readonly internalType: "address[]";
    }];
    readonly outputs: readonly [{
        readonly name: "balances";
        readonly type: "uint256[]";
        readonly internalType: "uint256[]";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getChannelData";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
    readonly outputs: readonly [{
        readonly name: "channel";
        readonly type: "tuple";
        readonly internalType: "struct Channel";
        readonly components: readonly [{
            readonly name: "participants";
            readonly type: "address[]";
            readonly internalType: "address[]";
        }, {
            readonly name: "adjudicator";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "challenge";
            readonly type: "uint64";
            readonly internalType: "uint64";
        }, {
            readonly name: "nonce";
            readonly type: "uint64";
            readonly internalType: "uint64";
        }];
    }, {
        readonly name: "status";
        readonly type: "uint8";
        readonly internalType: "enum ChannelStatus";
    }, {
        readonly name: "wallets";
        readonly type: "address[]";
        readonly internalType: "address[]";
    }, {
        readonly name: "challengeExpiry";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "lastValidState";
        readonly type: "tuple";
        readonly internalType: "struct State";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getOpenChannels";
    readonly inputs: readonly [{
        readonly name: "accounts";
        readonly type: "address[]";
        readonly internalType: "address[]";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bytes32[][]";
        readonly internalType: "bytes32[][]";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "join";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }, {
        readonly name: "index";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "sig";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "resize";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }, {
        readonly name: "candidate";
        readonly type: "tuple";
        readonly internalType: "struct State";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }, {
        readonly name: "proofs";
        readonly type: "tuple[]";
        readonly internalType: "struct State[]";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "withdraw";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "amount";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "event";
    readonly name: "Challenged";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly indexed: true;
        readonly internalType: "bytes32";
    }, {
        readonly name: "state";
        readonly type: "tuple";
        readonly indexed: false;
        readonly internalType: "struct State";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }, {
        readonly name: "expiration";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "Checkpointed";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly indexed: true;
        readonly internalType: "bytes32";
    }, {
        readonly name: "state";
        readonly type: "tuple";
        readonly indexed: false;
        readonly internalType: "struct State";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "Closed";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly indexed: true;
        readonly internalType: "bytes32";
    }, {
        readonly name: "finalState";
        readonly type: "tuple";
        readonly indexed: false;
        readonly internalType: "struct State";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "Created";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly indexed: true;
        readonly internalType: "bytes32";
    }, {
        readonly name: "wallet";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "channel";
        readonly type: "tuple";
        readonly indexed: false;
        readonly internalType: "struct Channel";
        readonly components: readonly [{
            readonly name: "participants";
            readonly type: "address[]";
            readonly internalType: "address[]";
        }, {
            readonly name: "adjudicator";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "challenge";
            readonly type: "uint64";
            readonly internalType: "uint64";
        }, {
            readonly name: "nonce";
            readonly type: "uint64";
            readonly internalType: "uint64";
        }];
    }, {
        readonly name: "initial";
        readonly type: "tuple";
        readonly indexed: false;
        readonly internalType: "struct State";
        readonly components: readonly [{
            readonly name: "intent";
            readonly type: "uint8";
            readonly internalType: "enum StateIntent";
        }, {
            readonly name: "version";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "data";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "allocations";
            readonly type: "tuple[]";
            readonly internalType: "struct Allocation[]";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "token";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }, {
            readonly name: "sigs";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }];
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "Deposited";
    readonly inputs: readonly [{
        readonly name: "wallet";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "token";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "amount";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "EIP712DomainChanged";
    readonly inputs: readonly [];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "Joined";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly indexed: true;
        readonly internalType: "bytes32";
    }, {
        readonly name: "index";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "Opened";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly indexed: true;
        readonly internalType: "bytes32";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "Resized";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly indexed: true;
        readonly internalType: "bytes32";
    }, {
        readonly name: "deltaAllocations";
        readonly type: "int256[]";
        readonly indexed: false;
        readonly internalType: "int256[]";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "Withdrawn";
    readonly inputs: readonly [{
        readonly name: "wallet";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "token";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "amount";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "error";
    readonly name: "ChallengeNotExpired";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "ChannelNotFinal";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "ChannelNotFound";
    readonly inputs: readonly [{
        readonly name: "channelId";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
}, {
    readonly type: "error";
    readonly name: "DepositAlreadyFulfilled";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "DepositsNotFulfilled";
    readonly inputs: readonly [{
        readonly name: "expectedFulfilled";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "actualFulfilled";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "ECDSAInvalidSignature";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "ECDSAInvalidSignatureLength";
    readonly inputs: readonly [{
        readonly name: "length";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "ECDSAInvalidSignatureS";
    readonly inputs: readonly [{
        readonly name: "s";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
}, {
    readonly type: "error";
    readonly name: "ERC6492DeploymentFailed";
    readonly inputs: readonly [{
        readonly name: "factory";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "calldata_";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
}, {
    readonly type: "error";
    readonly name: "ERC6492NoCode";
    readonly inputs: readonly [{
        readonly name: "expectedSigner";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "InsufficientBalance";
    readonly inputs: readonly [{
        readonly name: "available";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "required";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "InvalidAdjudicator";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidAllocations";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidAmount";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidChallengePeriod";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidChallengerSignature";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidParticipant";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidShortString";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidState";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidStateSignatures";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidStatus";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidValue";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "SafeERC20FailedOperation";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "StringTooLong";
    readonly inputs: readonly [{
        readonly name: "str";
        readonly type: "string";
        readonly internalType: "string";
    }];
}, {
    readonly type: "error";
    readonly name: "TransferFailed";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "to";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "amount";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}];
